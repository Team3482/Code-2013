// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package robot.core.commands;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import robot.core.Robot;
import robot.core.RobotMap;

/**
 * @author Westmont Robotics
 */
public class  Drive extends Command {
    private boolean spinning = false;
    private Timer timer;
    private Joystick j1 = Robot.oi.getJoystick1();
    public Drive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.chassis);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        System.out.println("Init");
        Robot.chassis.invertMotors();
        timer = new Timer();
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        System.out.println("Executing...");
        if(Robot.oi.stopButton.get()) {
            Robot.chassis.stop();
        } else {
            System.out.println("Calling drive");
            Robot.chassis.driveWithJoystick(j1);
        }
        
        // if the button has been pressed and it has been more than 0.1 seconds
        if(Robot.oi.spinUpButton.get() && timer.get() >= 100000) {
            timer.reset();
            spinning = !spinning;
            if(spinning) {
                Robot.shooter.spinUpShooter();
            } else {
                Robot.shooter.spinDownShooter();
            }
        } else if(Robot.oi.shootButton.get()) {
            Robot.shooter.pushFrisbee();
        }
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true
    protected void end() {
        System.out.println("Ended");
        Robot.chassis.stop();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        System.out.println("Interrupted");
        Robot.chassis.stop();
    }
}
